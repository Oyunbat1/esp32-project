#include <Arduino.h>
#include <ESPAsyncWebServer.h>
#include <FS.h>
#include <LittleFS.h>

AsyncWebServer server(80);

const char uploadPage[] PROGMEM = R"rawliteral(
<!DOCTYPE html>
<html>
<head>
    <title>ESP File Upload</title>
</head>
<body>
    <h2>Upload File to ESP</h2>
    <form method="POST" action="/upload" enctype="multipart/form-data">
        <input type="file" name="file">
        <input type="submit" value="Upload">
    </form>
</body>
</html>
)rawliteral";

void handleFileUpload(AsyncWebServerRequest *request, String filename, size_t index, uint8_t *data, size_t len, bool final) {
    static File file;
    if (!index) {
        Serial.printf("Uploading: %s\n", filename.c_str());
        file = LittleFS.open("/" + filename, "w");
    }
    if (file) {
        file.write(data, len);
    }
    if (final) {
        Serial.printf("Upload complete: %s (%d bytes)\n", filename.c_str(), index + len);
        file.close();
        request->send(200, "text/plain", "File upload successful");
    }
}

void deleteFile(AsyncWebServerRequest *request) {
    if (request->hasParam("filename")) {
        String filename = request->getParam("filename")->value();
        if (LittleFS.remove("/" + filename)) {
            request->send(200, "text/plain", "File deleted successfully");
        } else {
            request->send(500, "text/plain", "File deletion failed");
        }
    } else {
        request->send(400, "text/plain", "Missing filename parameter");
    }
}

void setup() {
    Serial.begin(115200);
    if (!LittleFS.begin()) {
        Serial.println("LittleFS Mount Failed");
        return;
    }

    WiFi.softAPConfig(IPAddress(192, 168, 4, 1), IPAddress(192, 168, 4, 1), IPAddress(255, 255, 255, 0));
    WiFi.softAP("qwerty", "12345678", 1, 0, 10);
    Serial.print("IP Address: ");
    Serial.println(WiFi.softAPIP());

    server.on("/", HTTP_GET, [](AsyncWebServerRequest *request) {
        listDir(LittleFS ,"/", 1);
        request->send_P(200, "text/html", uploadPage);
    });
    
    server.on("/upload", HTTP_POST, [](AsyncWebServerRequest *request) {

    }, handleFileUpload);
    
    server.begin();
}

void listDir(fs::FS &fs, const char * dirname, uint8_t levels){
    Serial.printf("Listing directory: %s\r\n", dirname);

    File root = fs.open(dirname);
    if(!root){
        Serial.println("- failed to open directory");
        return;
    }
    if(!root.isDirectory()){
        Serial.println(" - not a directory");
        return;
    }

    File file = root.openNextFile();
    while(file){
        if(file.isDirectory()){
            Serial.print("  DIR : ");
            Serial.println(file.name());
            if(levels){
                listDir(fs, file.path(), levels -1);
            }
        } else {
            Serial.print("  FILE: ");
            Serial.print(file.name());
            Serial.print("\tSIZE: ");
            Serial.println(file.size());
        }
        file = root.openNextFile();
    }
}

void loop() {
    // Nothing to do in the loop since AsyncWebServer handles requests asynchronously
}
